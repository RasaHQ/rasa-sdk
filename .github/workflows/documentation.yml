name: Publish Documentation

on:
  push:
    branches:
    - 'main'
    tags:
    - '**'

# SECRETS
# - GH_DOCS_WRITE_KEY: generated locally, added to github repo (public key)
#                    `ssh-keygen -t rsa -b 4096 -C "Github CI Docs Key" -N "" -f key`
# - GITHUB_TOKEN: (default, from github actions)

env:
  DOCS_FOLDER: docs
  DOCS_BRANCH: documentation

jobs:
  docs:
    name: Build Docs
    runs-on: ubuntu-latest
    if: github.repository == 'RasaHQ/rasa-sdk'  # don't run this for main branches of forks, would fail anyways

    steps:
    - name: Checkout git repository üïù
      uses: actions/checkout@v2

    - name: Set up Python 3.7 üêç
      uses: actions/setup-python@v1
      with:
        python-version: 3.7

    - name: Set up Node 12.x ü¶ô
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Read Poetry Version üî¢
      run: |
        echo "POETRY_VERSION=$(scripts/poetry-version.sh)" >> $GITHUB_ENV
      shell: bash

    - name: Install poetry ü¶Ñ
      uses: Gr1N/setup-poetry@v4
      with:
        poetry-version: ${{ env.POETRY_VERSION }}

    - name: Load Poetry Cached Libraries ‚¨á
      uses: actions/cache@v1
      with:
        path: ~/.cache/pypoetry/virtualenvs
        key: ${{ runner.os }}-poetry-3.7-${{ hashFiles('**/poetry.lock') }}
        restore-keys: ${{ runner.os }}-poetry-3.7

    - name: Load Yarn Cached Packages ‚¨á
      uses: actions/cache@v1
      with:
        path: newdocs/node_modules
        key: ${{ runner.os }}-yarn-12.x-${{ hashFiles('docs/yarn.lock') }}-${{ secrets.YARN_CACHE_KEY }}

    - name: Install Dependencies üì¶
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: make install install-docs

    - name: Pre-build Docs üß∂
      run: make prepare-docs

    - name: Set up SSH key for cloning / pushing docs
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ secrets.GH_DOCS_WRITE_KEY }}

    - name: Build & Publish Docs üèÉ‚Äç‚ôÄÔ∏è
      env:
        TMP_DOCS_FOLDER: /tmp/documentation-${{ github.run_id }}
        TMP_SSH_KEY_PATH: /tmp/docs_key
      run: |
        git config --global user.email "builds@github-ci.com"
        git config --global user.name "GitHub CI"
        git remote set-url --push origin "git@github.com:${{github.repository}}"

        ./scripts/push_docs_to_branch.sh
